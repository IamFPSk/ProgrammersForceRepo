# -*- coding: utf-8 -*-
"""Python Problem Solving

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vRM4tWnPefdqtSIuBDzqlu_gWXsPFFOO
"""

x = [[1,2,3],[4,5,6],[7,8,9]]
ind = []
for i in range(len(x)):
  for j in range(len(x)):
    if i==j:
      ind.append([i,j])
    if i+j==2:
      ind.append([i,j])
print(ind)
i = 0
j = -1
while i < len(ind)//2:
  ind_i1, ind_j1 = ind[i]
  ind_i2, ind_j2 = ind[j]
  x[ind_i1][ind_j1],x[ind_i2][ind_j2] = x[ind_i2][ind_j2],x[ind_i1][ind_j1]
  i+=1
  j-=1
print(x)

"""# Add two numbers

Adding two number using lambda function
"""

# Define a lambda function to add two numbers
add_numbers = lambda x, y: x + y

# Take input from the user
num1 = 10
num2 = 5

# Call the lambda function to add the two numbers
result = add_numbers(num1, num2)

# Print the result
print("The sum of", num1, "and", num2, "is", result)

"""Python program to add two numbers with recursive function"""

# Define a recursive function to add two numbers
def add_numbers_recursive(x, y):
	if y == 0:
		return x
	else:
		return add_numbers_recursive(x + 1, y - 1)

# Take input from the user
num1 = 10
num2 = 20

# Call the recursive function to add the two numbers
result = add_numbers_recursive(num1, num2)

# Print the result
print("The sum of", num1, "and", num2, "is", result)

"""# Find Maximum of two numbers in Python

Maximum of two numbers Using lambda function
"""

# python code to find maximum of two numbers

a=2;b=4
maximum = lambda a,b:a if a > b else b
print(f'{maximum(a,b)} is a maximum number')

"""Maximum of two numbers Using list comprehension

"""

a=2;b=4
x=[a if a>b else b]
print("maximum number is:",x)

"""Maximum of two numbers Using sort() method

"""

# Python program to find the
# maximum of two numbers
a = 2
b = 4
x=[a,b]
x.sort()
print(x[-1])

"""# Python Program to Find the Factorial of a Number

Find the Factorial of a Number Using Recursive approach
"""

# Python 3 program to find
# factorial of given number
def factorial(n):

	# single line to find factorial
	return 1 if (n==1 or n==0) else n * factorial(n - 1)

# Driver Code
num = 6
print("Factorial of",num,"is",factorial(num))

"""Find the Factorial of a Number Using Iterative approach

"""

# Python 3 program to find
# factorial of given number
def factorial(n):
	if n < 0:
		return 0
	elif n == 0 or n == 1:
		return 1
	else:
		fact = 1
		while(n > 1):
			fact *= n
			n -= 1
		return fact

# Driver Code
num = 5
print("Factorial of",num,"is",
factorial(num))

# Python 3 program to find
# factorial of given number

# Function to find factorial of given number
def factorial(n):

	res = 1

	for i in range(2, n+1):
		res *= i
	return res
# Driver Code
num = 5
print("Factorial of", num, "is",
factorial(num))

"""Find the Factorial of a Number Using using In-built function

"""

# Python 3 program to find
# factorial of given number
import math

def factorial(n):
	return(math.factorial(n))


# Driver Code
num = 5
print("Factorial of", num, "is",
	factorial(num))

"""# Python Program for Prime Number

"""

def prime(starting_range, ending_range):
  lst=[]
  flag=False                #Declaring flag variable
  for i in range(starting_range, ending_range):#elements range between starting and ending range
    for j in range(2,i):
      if(i%j==0):     #checking if number is divisible or not
        flag=True        #if number is divisible, then flag variable will become 1
        break
      else:
        flag=False
    if(flag==False):    #if flag variable is 0, then element will append in list
      lst.append(i)
  return lst

# Driver program
starting_range = 2
ending_range = 7
lst = prime(starting_range, ending_range)
if len(lst) == 0:
    print("There are no prime numbers in this range")
else:
    print("The prime numbers in this range are: ", lst)

"""Python Program to Check Prime Number

"""

num = 157
# If given number is greater than 1
if num > 1:
  # Iterate from 2 to n / 2
  for i in range(2, num//2+1):
    # If num is divisible by any number between
    # 2 and n / 2, it is not prime
    if (num % i) == 0:
      print(num, "is not a prime number")
      break
  else:
    print(num, "is a prime number")
else:
  print(num, "is not a prime number")

"""# Python Program for n-th Fibonacci number

Python Program for n-th Fibonacci number Using recursion
"""

# Function for nth Fibonacci number

def Fibonacci(n):
	if n<= 0:
		print("Incorrect input")
	# First Fibonacci number is 0
	elif n == 1:
		return 0
	# Second Fibonacci number is 1
	elif n == 2:
		return 1
	else:
		return Fibonacci(n-1)+Fibonacci(n-2)

# Driver Program

print(Fibonacci(0))

def Fib(n):
  res = [0,1,1]
  if n < 4:
    return res[n-1]
  else:
    for i in range(2,n):
      res.append(res[i]+res[i-1])
  return res
n = int(input())
res = Fib(n)
if n in res:
  print("true")
else:
  print("false")

"""# Program to print ASCII Value of a character

"""

c = 'g'
print("The ASCII value of '" + c + "' is", ord(c))

"""Cumulative Sum"""

lists = [10, 20, 30, 40, 50]

for i in range(1,len(lists)):
  lists[i] = lists[i-1] + lists[i]
print(lists)

"""# Python Program to Add Two Matrices

Add Two Matrices Using for loop
"""

# Program to add two matrices using nested loop

X = [[1,2,3],
	[4 ,5,6],
	[7 ,8,9]]

Y = [[9,8,7],
	[6,5,4],
	[3,2,1]]


result = [[0,0,0],
		[0,0,0],
		[0,0,0]]

# iterate through rows
for i in range(len(X)):
# iterate through columns
	for j in range(len(X[0])):
		result[i][j] = X[i][j] + Y[i][j]

for r in result:
	print(r)

"""Add Two Matrices Using List comprehension"""

# Program to add two matrices
# using list comprehension

X = [[1,2,3],
	[4 ,5,6],
	[7 ,8,9]]

Y = [[9,8,7],
	[6,5,4],
	[3,2,1]]

result = [[X[i][j] + Y[i][j] for j in range
(len(X[0]))] for i in range(len(X))]

for r in result:
	print(r)

"""Add Two Matrices Using Numpy"""

# Program to add two matrices
# using numpy

import numpy as np

X = [[1,2,3],
	[4 ,5,6],
	[7 ,8,9]]

Y = [[9,8,7],
	[6,5,4],
	[3,2,1]]

result = np.array(X) + np.array(Y)

print(result.tolist())

"""# Python program to multiply two matrices

Using Simple Nested Loops
"""

# take a 3x3 matrix
A = [[12, 7, 3],
	[4, 5, 6],
	[7, 8, 9]]

# take a 3x4 matrix
B = [[5, 8, 1, 2],
	[6, 7, 3, 0],
	[4, 5, 9, 1]]

result = [[0, 0, 0, 0],
		[0, 0, 0, 0],
		[0, 0, 0, 0]]

# iterating by row of A
for i in range(len(A)):

	# iterating by column by B
	for j in range(len(B[0])):

		# iterating by rows of B
		for k in range(len(B)):
			result[i][j] += A[i][k] * B[k][j]

for r in result:
	print(r)

"""Program to multiply two matrices using list comprehension"""

# take a 3x3 matrix
A = [[12, 7, 3],
	[4, 5, 6],
	[7, 8, 9]]

# take a 3x4 matrix
B = [[5, 8, 1, 2],
	[6, 7, 3, 0],
	[4, 5, 9, 1]]

# result will be 3x4
result = [[sum(a * b for a, b in zip(A_row, B_col))
						for B_col in zip(*B)]
								for A_row in A]

for r in result:
	print(r)

"""Matrix Multiplication (Vectorized implementation)."""

import numpy as np
# take a 3x3 matrix
A = [[12, 7, 3],
	[4, 5, 6],
	[7, 8, 9]]

# take a 3x4 matrix
B = [[5, 8, 1, 2],
	[6, 7, 3, 0],
	[4, 5, 9, 1]]

result = np.dot(A,B)

for r in result:
	print(r)

"""Adding and Subtracting Matrices in Python

"""

A = [[1,2],[3,4]]
B = [[4,5],[6,7]]

add = [[0,0],[0,0]]
sub = np.zeros(4).reshape(2,2)
for i in range(len(A)):
  for j in range(len(A[i])):
    add[i][j] = A[i][j] + B[i][j]
    sub[i][j] = A[i][j] - B[i][j]
print(add,sub)

"""# Python | Matrix Product

"""

# initializing list
test_list = [[1, 4, 5], [7, 3], [4], [46, 7, 3]]

# printing original list
print("The original list : " + str(test_list))

x = []
for i in test_list:
	x.extend(i)
print(x)
res = 1
for j in x:
	res *= j


# print result
print("The total element product in lists is : " + str(res))

"""Transpose of a matrix using numpy"""

import numpy
matrix=[[1,2,3],[4,5,6]]
print(matrix)
print("\n")
print(numpy.transpose(matrix))

"""# Dictionary

Python – Extract Unique values dictionary values
"""

test_dict = {'gfg' : [5, 6, 7, 8],
            'is' : [10, 11, 7, 5],
            'best' : [6, 12, 10, 8],
            'for' : [1, 2, 5]}

# printing original dictionary
print("The original dictionary is : " + str(test_dict))

# Extract Unique values dictionary values
x=[]
for i in test_dict.keys():
    x.extend(test_dict[i])
x=list(set(x))
x.sort()
# printing result
print("The unique values list is : " + str(x))

"""# Numpy questions"""

import numpy as np

print(np.__version__)
np.show_config()

Z = np.zeros(10)
print(Z)

Z = np.zeros((10,10))
print("%d bytes" % (Z.size * Z.itemsize))

Z = np.zeros(10)
Z[4] = 1
print(Z)

Z = np.arange(10,50)
print(Z)

Z = np.arange(50)
Z = Z[::-1]
print(Z)

Z = np.arange(9).reshape(3, 3)
print(Z)

nz = np.nonzero([1,2,0,0,4,0])
print(nz)

Z = np.eye(3)
print(Z)

Z = np.random.random((3,3,3))
print(Z)

Z = np.random.random((10,10))
print(Z)
Zmin, Zmax = Z.min(), Z.max()
print(Zmin, Zmax)

Z = np.random.random(30)
m = Z.mean()
print(m)

Z = np.linspace(0,1,11,endpoint=False)[1:]
print(Z)

A = np.random.randint(0,2,5)
B = np.random.randint(0,2,5)

# Assuming identical shape of the arrays and a tolerance for the comparison of values
equal = np.allclose(A,B)
print(equal,A,B)

Z = np.zeros(10)
Z.flags.writeable = False
Z[0] = 1

import scipy
import scipy.spatial

Z = np.random.random((10,2))
D = scipy.spatial.distance.cdist(Z,Z)
print(D)

from io import StringIO

# Fake file
s = StringIO('''1, 2, 3, 4, 5

                6,  ,  , 7, 8

                 ,  , 9,10,11
''')
Z = np.genfromtxt(s, delimiter=",", dtype=int)
print(Z)

Z = np.arange(9).reshape(3,3)
for index, value in np.ndenumerate(Z):
    print(index, value)
for index in np.ndindex(Z.shape):
    print(index, Z[index])

X = [1,2,3,4,5,6]
I = [1,3,9,3,4,1]
F = np.bincount(I,X)
print(F)

"""70. Consider the vector [1, 2, 3, 4, 5], how to build a new vector with 3 consecutive zeros interleaved between each value? (★★★)"""

Z = np.array([1,2,3,4,5])
nz = 3
Z0 = np.zeros(len(Z) + (len(Z)-1)*(nz))
Z0[::nz+1] = Z
print(Z0)

"""71. Consider an array of dimension (5,5,3), how to mulitply it by an array with dimensions (5,5)? (★★★)

"""

A = np.ones((5,5,3))
B = 2*np.ones((5,5))
print(A * B[:,:,None])

"""72. How to swap two rows of an array? (★★★)"""

A = np.arange(25).reshape(5,5)
A[[0,1]] = A[[1,0]]
print(A)

x = float(2.8)
print(type(x))